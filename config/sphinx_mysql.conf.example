#MySQL数据源配置，详情请查看：http://www.coreseek.cn/products-install/mysql/
#请先将var/test/documents.sql导入数据库，并配置好以下的MySQL用户密码数据库

#源定义
source shop
{
    type                    = mysql

    sql_host                = localhost
    sql_user                = root
    sql_pass                = roor123 
    sql_db                  = sjb_production
    sql_port                = 3306
    sql_query_pre           = SET NAMES utf8
    #sql_query_pre           = CREATE TABLE sph_counter(counter_id INTEGER PRIMARY KEY NOT NULL, max_doc_id INTEGER NOT NULL);
    sql_query_pre           = REPLACE INTO sph_counter SELECT 1, MAX(id) FROM shops;
    sql_query_pre           = REPLACE INTO sph_timer_counter SELECT 1, MAX(id), MAX(updated_at) FROM shops;
    
    sql_query               = SELECT S.id, S.url, S.user_id, S.category_id, S.shop_type, S.priority, S.name, B.name as brand_name, B.e_name, S.brand_id, S.product, S.tags, S.district, S.address, S.street, S.mall, S.mall_id, S.city_id, S.low_price, S.high_price, S.dp_id, S.likes_count, S.comments_count, S.dispose_count, S.items_count, S.level, S.rating, S.crawled, S.activated, S.apply_authenticate, S.approve_authenticate, UNIX_TIMESTAMP(S.created_at) as created_time, UNIX_TIMESTAMP(S.updated_at) as updated_time, radians(S.jindu) as long_radians, radians(S.weidu) as lat_radians FROM shops S left join brands B on S.brand_id = B.id WHERE S.updated_at <=( SELECT current FROM sph_timer_counter WHERE counter_id=1 )
    #sql_query                = SELECT id, group_id, UNIX_TIMESTAMP(date_added) AS date_added, title, content FROM documents
                                                              #sql_query第一列id需为整数
                                                              #title、content作为字符串/文本字段，被全文索引
    sql_field_string         = mall
    sql_field_string         = brand_name
    sql_attr_uint            = user_id           #从SQL读取到的值必须为整数
    sql_attr_uint            = likes_count
    sql_attr_uint            = comments_count  
    sql_attr_uint            = dispose_count
    sql_attr_uint            = items_count
    sql_attr_uint            = level
    sql_attr_uint            = priority
    sql_attr_uint            = rating 
    sql_attr_uint            = crawled
    sql_attr_uint            = dp_id
    sql_attr_uint            = city_id
    sql_attr_uint            = mall_id
    sql_attr_uint            = brand_id
    sql_attr_uint            = low_price
    sql_attr_uint            = high_price
    sql_attr_uint            = category_id
    sql_attr_bool            = activated
    sql_attr_bool            = apply_authenticate
    sql_attr_bool            = approve_authenticate
    sql_attr_string          = street
    #sql_attr_string          = mall
    sql_attr_string          = url
    sql_attr_uint            = shop_type

    sql_attr_timestamp        = created_time  #从SQL读取到的值必须为整数，作为时间属性
    sql_attr_timestamp        = updated_time
    sql_attr_float = long_radians
    sql_attr_float = lat_radians

    sql_query_info_pre      = SET NAMES utf8                                        #命令行查询时，设置正确的字符集
    #sql_query_info            = SELECT * FROM documents WHERE id=$id #命令行查询时，从数据库读取原始数据信息
    sql_query_info         = SELECT * FROM shops WHERE id=$id
}

source shop_delta : shop
{
    sql_query_pre = SET NAMES utf8
    sql_query     = SELECT S.id, S.url, S.user_id, S.category_id, S.shop_type, S.priority, S.name, B.name as brand_name, B.e_name, S.brand_id, S.product, S.tags, S.district, S.address, S.street, S.mall, S.mall_id, S.city_id, S.low_price, S.high_price, S.dp_id, S.likes_count, S.comments_count, S.dispose_count, S.items_count, S.level, S.rating, S.crawled, S.activated, S.apply_authenticate, S.approve_authenticate, UNIX_TIMESTAMP(S.created_at) as created_time, UNIX_TIMESTAMP(S.updated_at) as updated_time, radians(S.jindu) as long_radians, radians(S.weidu) as lat_radians FROM shops S left join brands B on S.brand_id = B.id WHERE S.updated_at > ( SELECT current FROM sph_timer_counter WHERE counter_id=1 )    
    #sql_query                = SELECT id, group_id, UNIX_TIMESTAMP(date_added) AS date_added, title, content FROM documents

}

#index定义
index shop
{
    source            = shop             #对应的source名称
    path            = /usr/local/coreseek/var/data/sjb_shop #请修改为实际使用的绝对路径，例如：/usr/local/coreseek/var/...
    docinfo            = extern
    mlock            = 0
    morphology        = none
    min_word_len        = 1
    html_strip                = 0

    #中文分词配置，详情请查看：http://www.coreseek.cn/products-install/coreseek_mmseg/
    charset_dictpath = /usr/local/mmseg3/etc/ #BSD、Linux环境下设置，/符号结尾
    #charset_dictpath = etc/                             #Windows环境下设置，/符号结尾，最好给出绝对路径，例如：C:/usr/local/coreseek/etc/...
    charset_type        = zh_cn.utf-8
}

index shop_delta : shop
{
    source = shop_delta
    path = /usr/local/coreseek/var/data/sjb_shop_delta
}


#MySQL数据源配置，详情请查看：http://www.coreseek.cn/products-install/mysql/
#请先将var/test/documents.sql导入数据库，并配置好以下的MySQL用户密码数据库

#============================================================


#源定义
source item
{
    type                    = mysql

    sql_host                = localhost
    sql_user                = root
    sql_pass                = roor123 
    sql_db                  = sjb_production
    sql_port                = 3306
    sql_query_pre           = SET NAMES utf8
    #sql_query_pre          = CREATE TABLE sph_counter(counter_id INTEGER PRIMARY KEY NOT NULL, max_doc_id INTEGER NOT NULL);
    #sql_query_pre           = REPLACE INTO sph_counter SELECT 1, MAX(id) FROM shops;
    sql_query_pre           =  REPLACE INTO sph_timer_counter SELECT 2, MAX(id), MAX(updated_at) FROM items

    sql_query               = SELECT I.id as id, K.level as ilevel, K.priority as priority, S.id as shop_id, S.user_id as user_id, S.name as name, S.brand_name as brand_name, K.brand_id as brand_id, K.off_percent as off_percent, K.from as source, I.url as url, K.title as title, I.sku_id as sku_id, S.district as district, \
	S.address as address, S.street as street, S.mall as mall, S.mall_id as mall_id, S.level as level, S.rating as rating, S.dp_id as dp_id, S.city_id as city_id,  \
	S.crawled as crawled, S.items_count as items_count, K.category_id as category_id, I.likes_count as likes_count, I.comments_count as comments_count, \
	I.dispose_count as dispose_count, CAST(K.price AS unsigned) as price, UNIX_TIMESTAMP(K.created_at) as created_time, UNIX_TIMESTAMP(I.updated_at) as updated_time,\
	radians(S.jindu) as long_radians, radians(S.weidu) as lat_radians FROM (items I inner join shops S on I.shop_id = S.id ) left join skus K on I.sku_id = K.id  \
        where I.deleted is NULL and I.updated_at <= ( SELECT current FROM sph_timer_counter WHERE counter_id = 2 );
    #sql_query              = SELECT id, group_id, UNIX_TIMESTAMP(date_added) AS date_added, title, content FROM documents
                                                              #sql_query第一列id需为整数
                                                              #title、content作为字符串/文本字段，被全文索引
    sql_field_string         = mall
    sql_field_string         = brand_name
    sql_attr_uint            = user_id           #从SQL读取到的值必须为整数
    sql_attr_uint            = shop_id
    sql_attr_uint            = likes_count
    sql_attr_uint            = comments_count
    sql_attr_uint            = dispose_count  
    sql_attr_uint            = items_count
    sql_attr_uint            = level
    sql_attr_uint            = ilevel
    sql_attr_uint            = rating 
    sql_attr_uint            = crawled
    sql_attr_uint            = dp_id
    sql_attr_uint            = city_id
    sql_attr_uint            = category_id
    sql_attr_uint            = sku_id
    sql_attr_uint            = mall_id
    sql_attr_uint            = brand_id
    sql_attr_uint            = off_percent
    sql_attr_uint            = price
    sql_attr_uint            = priority	
    sql_attr_string          = street
    #sql_attr_string         = mall
    sql_attr_string          = url
    sql_attr_string          = source

    sql_attr_timestamp       = created_time #从SQL读取到的值必须为整数，作为时间属性
    sql_attr_timestamp       = updated_time
    sql_attr_float = long_radians
    sql_attr_float = lat_radians

    sql_query_info_pre     = SET NAMES utf8                                        #命令行查询时，设置正确的字符集
    #sql_query_info        = SELECT * FROM documents WHERE id=$id #命令行查询时，从数据库读取原始数据信息
    sql_query_info         = SELECT * FROM items WHERE id=$id
}

source item_delta : item
{
    sql_query_pre = SET NAMES utf8
    sql_query     = SELECT I.id as id, K.level as ilevel, K.priority as priority, S.id as shop_id, S.user_id as user_id, S.name as name, S.brand_name as brand_name, K.brand_id as brand_id, K.off_percent as off_percent, K.from as source, I.url as url, K.title as title, I.sku_id as sku_id, S.district as district, \
        S.address as address, S.street as street, S.mall as mall, S.mall_id as mall_id, S.level as level, S.rating as rating, S.dp_id as dp_id, S.city_id as city_id,  \
        S.crawled as crawled, S.items_count as items_count, K.category_id as category_id, I.likes_count as likes_count, I.comments_count as comments_count, \
        I.dispose_count as dispose_count, CAST(K.price AS unsigned) as price, UNIX_TIMESTAMP(K.created_at) as created_time, UNIX_TIMESTAMP(I.updated_at) as updated_time,\
        radians(S.jindu) as long_radians, radians(S.weidu) as lat_radians FROM (items I inner join shops S on I.shop_id = S.id ) left join skus K on I.sku_id = K.id  \
        where I.deleted is NULL and I.updated_at > ( SELECT current FROM sph_timer_counter WHERE counter_id = 2 );
}

#index定义
#index item
#{
#    source            = item             #对应的source名称
#    path            = /usr/local/coreseek/var/data/sjb_item #请修改为实际使用的绝对路径，例如：/usr/local/coreseek/var/...
#    docinfo            = extern
#    mlock            = 0
#    morphology        = none
#    min_word_len        = 1
#    html_strip                = 0
#
#    #中文分词配置，详情请查看：http://www.coreseek.cn/products-install/coreseek_mmseg/
#    charset_dictpath = /usr/local/mmseg3/etc/ #BSD、Linux环境下设置，/符号结尾
#    #charset_dictpath = etc/                             #Windows环境下设置，/符号结尾，最好给出绝对路径，例如：C:/usr/local/coreseek/etc/...
#    charset_type        = zh_cn.utf-8
#}

#index item_delta : item
#{
#    source = item_delta
#    path = /usr/local/coreseek/var/data/sjb_item_delta
#}

#============================================================

#源定义
source sku
{
    type                    = mysql

    sql_host                = localhost
    sql_user                = root
    sql_pass                = roor123 
    sql_db                  = sjb_production
    sql_port                = 3306
    sql_query_pre           = SET NAMES utf8
    sql_query_pre           =  REPLACE INTO sph_timer_counter SELECT 7, MAX(id), MAX(updated_at) FROM skus

    sql_query               = SELECT K.id as id, K.level as ilevel, K.head as head, C.synonym, C.weight as weight, C.is_active as is_active, B.priority as priority, B.level as level, B.id as brand_id, B.name as brand_name, B.display_name as display_name, K.off_percent as off_percent, K.from as source, K.url as url, K.title as title, K.category_id as category_id, K.likes_count as likes_count, K.comments_count as comments_count, K.dispose_count as dispose_count, CAST(K.price AS unsigned) as price, UNIX_TIMESTAMP(K.created_at) as created_time, UNIX_TIMESTAMP(K.updated_at) as updated_time FROM ( skus K left join categories C on K.sub_cat_id = C.id ) left join brands B on K.brand_id = B.id where K.deleted is NULL and K.updated_at <= ( SELECT current FROM sph_timer_counter WHERE counter_id = 7 );
   
    sql_field_string         = brand_name
    sql_field_string         = head 
    sql_field_string         = synonym
    sql_field_string        = source
    sql_attr_uint            = likes_count
    sql_attr_uint            = comments_count
    sql_attr_uint            = dispose_count   
    sql_attr_uint            = level
    sql_attr_uint            = ilevel  
    sql_attr_uint            = category_id   
    sql_attr_uint            = brand_id
    sql_attr_uint            = off_percent
    sql_attr_uint            = price
    sql_attr_uint            = priority	
    sql_attr_string          = url
    sql_attr_uint            = weight
    sql_attr_uint            = is_active

    sql_attr_timestamp       = created_time #从SQL读取到的值必须为整数，作为时间属性
    sql_attr_timestamp       = updated_time

    sql_query_info_pre     = SET NAMES utf8                                        #命令行查询时，设置正确的字符集
    #sql_query_info        = SELECT * FROM documents WHERE id=$id #命令行查询时，从数据库读取原始数据信息
    sql_query_info         = SELECT * FROM skus WHERE id=$id
}

source sku_delta : sku
{
    sql_query_pre = SET NAMES utf8
    sql_query     = SELECT K.id as id, K.level as ilevel, K.head as head, C.synonym, C.weight as weight, C.is_active as is_active, B.priority as priority, B.level as level, B.id as brand_id, B.name as brand_name, B.display_name as display_name, K.off_percent as off_percent, K.from as source, K.url as url, K.title as title, K.category_id as category_id, K.likes_count as likes_count, K.comments_count as comments_count, K.dispose_count as dispose_count, CAST(K.price AS unsigned) as price, UNIX_TIMESTAMP(K.created_at) as created_time, UNIX_TIMESTAMP(K.updated_at) as updated_time FROM ( skus K left join categories C on K.sub_cat_id = C.id ) left join brands B on K.brand_id = B.id where K.deleted is NULL and K.updated_at > ( SELECT current FROM sph_timer_counter WHERE counter_id = 7 );
}

#index定义
index sku
{
    source            = sku            #对应的source名称
    path            = /usr/local/coreseek/var/data/sjb_sku #请修改为实际使用的绝对路径，例如：/usr/local/coreseek/var/...
    docinfo            = extern
    mlock            = 0
    morphology        = none
    min_word_len        = 1
    html_strip                = 0

    #中文分词配置，详情请查看：http://www.coreseek.cn/products-install/coreseek_mmseg/
    charset_dictpath = /usr/local/mmseg3/etc/ #BSD、Linux环境下设置，/符号结尾
    #charset_dictpath = etc/                             #Windows环境下设置，/符号结尾，最好给出绝对路径，例如：C:/usr/local/coreseek/etc/...
    charset_type        = zh_cn.utf-8
}

index sku_delta : sku
{
    source = sku_delta
    path = /usr/local/coreseek/var/data/sjb_sku_delta
}

#============================================================



#源定义
source discount
{
    type                    = mysql

    sql_host                = localhost
    sql_user                = root
    sql_pass                = roor123 
    sql_db                  = sjb_production
    sql_port                = 3306
    sql_query_pre           = SET NAMES utf8
    #sql_query_pre           = CREATE TABLE sph_counter(counter_id INTEGER PRIMARY KEY NOT NULL, max_doc_id INTEGER NOT NULL);
    sql_query_pre           = REPLACE INTO sph_counter SELECT 5, MAX(id) FROM discounts;
    sql_query_pre           = REPLACE INTO sph_timer_counter SELECT 5, MAX(id), MAX(updated_at) FROM discounts;

    sql_query               = SELECT D.id as id, D.deleted as deleted, UNIX_TIMESTAMP(D.start_date) as start_date, UNIX_TIMESTAMP(D.end_date) as end_date, D.description as description, S.id as shop_id, S.user_id as user_id, S.name as name, S.brand_name as brand_name, S.brand_id as brand_id, S.url as url, S.district as district, S.address as address, S.street as street, S.mall as mall, S.mall_id as mall_id, S.likes_count as likes_count, S.comments_count as comments_count, S.items_count as items_count, D.dispose_count, S.level as level, S.rating as rating, S.dp_id as dp_id, S.city_id as city_id,  S.crawled as crawled, UNIX_TIMESTAMP(D.created_at) as created_time, UNIX_TIMESTAMP(D.updated_at) as updated_time, radians(S.jindu) as long_radians, radians(S.weidu) as lat_radians FROM discounts D inner join shops S where D.discountable_type != 'Brand' and D.discountable_id = S.id  \
                            and D.updated_at <= ( SELECT current FROM sph_timer_counter WHERE counter_id=5 );
    #sql_query              = SELECT id, group_id, UNIX_TIMESTAMP(date_added) AS date_added, title, content FROM documents
                                                              #sql_query第一列id需为整数
                                                              #title、content作为字符串/文本字段，被全文索引
    sql_field_string         = mall
    sql_field_string         = brand_name
    sql_attr_uint            = user_id           #从SQL读取到的值必须为整数
    sql_attr_uint            = shop_id
    sql_attr_uint            = likes_count
    sql_attr_uint            = comments_count
    sql_attr_uint            = dispose_count
    sql_attr_uint            = items_count  
    sql_attr_uint            = level
    sql_attr_uint            = rating 
    sql_attr_uint            = crawled
    sql_attr_uint            = dp_id
    sql_attr_uint            = city_id
    sql_attr_uint            = mall_id
    sql_attr_uint            = brand_id 
    sql_attr_uint            = deleted
    sql_attr_string          = street  
    #sql_attr_string         = mall 
    sql_attr_timestamp       = created_time #从SQL读取到的值必须为整数，作为时间属性
    sql_attr_timestamp       = updated_time
    sql_attr_float = long_radians
    sql_attr_float = lat_radians
    
    sql_attr_timestamp = start_date
    sql_attr_timestamp = end_date

    sql_query_info_pre      = SET NAMES utf8                                        #命令行查询时，设置正确的字符集
    #sql_query_info            = SELECT * FROM documents WHERE id=$id #命令行查询时，从数据库读取原始数据信息
    sql_query_info         = SELECT * FROM discounts WHERE id=$id
}

source discount_delta : discount
{
    sql_query_pre = SET NAMES utf8
    sql_query     =   SELECT D.id as id, D.deleted as deleted, UNIX_TIMESTAMP(D.start_date) as start_date, UNIX_TIMESTAMP(D.end_date) as end_date, D.description as description, S.id as shop_id, S.user_id as user_id, S.name as name, S.brand_name as brand_name, S.brand_id as brand_id, S.url as url, S.district as district, S.address as address, S.street as street, S.mall as mall, S.mall_id as mall_id, S.likes_count as likes_count, S.comments_count as comments_count, S.items_count as items_count, D.dispose_count, S.level as level, S.rating as rating, S.dp_id as dp_id, S.city_id as city_id,  S.crawled as crawled, UNIX_TIMESTAMP(D.created_at) as created_time, UNIX_TIMESTAMP(D.updated_at) as updated_time, radians(S.jindu) as long_radians, radians(S.weidu) as lat_radians FROM discounts D inner join shops S where D.discountable_type != 'Brand' and D.discountable_id = S.id  \
                            and D.updated_at > ( SELECT current FROM sph_timer_counter WHERE counter_id=5 );
}
#index定义
index discount
{
    source            = discount             #对应的source名称
    path            = /usr/local/coreseek/var/data/sjb_discount #请修改为实际使用的绝对路径，例如：/usr/local/coreseek/var/...
    docinfo            = extern
    mlock            = 0
    morphology        = none
    min_word_len        = 1
    html_strip                = 0

    #中文分词配置，详情请查看：http://www.coreseek.cn/products-install/coreseek_mmseg/
    charset_dictpath = /usr/local/mmseg3/etc/ #BSD、Linux环境下设置，/符号结尾
    #charset_dictpath = etc/                             #Windows环境下设置，/符号结尾，最好给出绝对路径，例如：C:/usr/local/coreseek/etc/...
    charset_type        = zh_cn.utf-8
}

index discount_delta : discount
{
    source = discount_delta
    path = /usr/local/coreseek/var/data/sjb_discount_delta
}



#源定义
source dapei
{
    type                    = mysql
    sql_host                = localhost
    sql_user                = root
    sql_pass                = roor123 
    sql_db                  = sjb_production
    sql_port                = 3306
    sql_query_pre           = SET NAMES utf8   
    sql_query_pre           = REPLACE INTO sph_timer_counter SELECT 1, MAX(id), MAX(updated_at) FROM items;

    sql_query              = SELECT I.id as id, I.level as level, U.name, U.nickname, D.tags as dtags, D.description as description, I.user_id as user_id, I.city_id as city_id, I.from as source, I.tags as tags, I.color as color, I.url as url, I.title as title, I.desc as introduction, I.category_id as category_id, I.likes_count as likes_count, I.comments_count as comments_count, \
	I.dispose_count as dispose_count,  UNIX_TIMESTAMP(I.created_at) as created_time, UNIX_TIMESTAMP(I.updated_at) as updated_time \
	FROM ( ( items I left join users U on I.user_id = U.id) left join dapei_infos D on D.dapei_id = I.id  ) where I.category_id = 1001 and I.deleted is NULL and I.updated_at <= ( SELECT current FROM sph_timer_counter WHERE counter_id=1 );
    
    sql_attr_uint            = user_id           #从SQL读取到的值必须为整数
    sql_attr_uint            = likes_count
    sql_attr_uint            = comments_count
    sql_attr_uint            = dispose_count  
    sql_attr_uint            = city_id
    sql_attr_uint            = category_id
    sql_attr_uint            = level
    sql_attr_string          = url
    sql_attr_string          = source

    sql_attr_timestamp        = created_time #从SQL读取到的值必须为整数，作为时间属性
    sql_attr_timestamp        = updated_time

    sql_query_info_pre      = SET NAMES utf8                                        #命令行查询时，设置正确的字符集
    #sql_query_info            = SELECT * FROM documents WHERE id=$id #命令行查询时，从数据库读取原始数据信息
    sql_query_info         = SELECT * FROM items WHERE id=$id
}

source dapei_delta : dapei
{
    sql_query_pre = SET NAMES utf8
    sql_query     = SELECT I.id as id, I.level as level, U.name, U.nickname, D.tags as dtags, D.description as description, I.user_id as user_id, I.city_id as city_id, I.from as source, I.tags as tags, I.color as color, I.url as url, I.title as title, I.desc as introduction, I.category_id as category_id, I.likes_count as likes_count, I.comments_count as comments_count, \
        I.dispose_count as dispose_count,  UNIX_TIMESTAMP(I.created_at) as created_time, UNIX_TIMESTAMP(I.updated_at) as updated_time \
        FROM ( ( items I left join users U on I.user_id = U.id) left join dapei_infos D on D.dapei_id = I.id  ) where I.category_id = 1001 and I.deleted is NULL and I.updated_at > ( SELECT current FROM sph_timer_counter WHERE counter_id=1 );

}

#index定义
index dapei
{
    source            = dapei             #对应的source名称
    path            = /usr/local/coreseek/var/data/sjb_dapei #请修改为实际使用的绝对路径，例如：/usr/local/coreseek/var/...
    docinfo            = extern
    mlock            = 0
    morphology        = none
    min_word_len        = 1
    html_strip                = 0

    #中文分词配置，详情请查看：http://www.coreseek.cn/products-install/coreseek_mmseg/
    charset_dictpath = /usr/local/mmseg3/etc/ #BSD、Linux环境下设置，/符号结尾
    #charset_dictpath = etc/                             #Windows环境下设置，/符号结尾，最好给出绝对路径，例如：C:/usr/local/coreseek/etc/...
    charset_type        = zh_cn.utf-8
}

index dapei_delta : dapei
{
    source = dapei_delta
    path = /usr/local/coreseek/var/data/sjb_dapei_delta
}

#============================================================



#源定义
source comment
{
    type                    = mysql

    sql_host                = localhost
    sql_user                = root
    sql_pass                = roor123 
    sql_db                  = sjb_production
    sql_port                = 3306
    sql_query_pre           = SET NAMES utf8
    #sql_query_pre           = CREATE TABLE sph_counter(counter_id INTEGER PRIMARY KEY NOT NULL, max_doc_id INTEGER NOT NULL);
    sql_query_pre           = REPLACE INTO sph_counter SELECT 2, MAX(id) FROM comments;

    sql_query              = SELECT C.id as id, S.id as shop_id, C.title as title, C.comment as comment, S.likes_count as likes_count, S.comments_count as comments_count, \
	S.dispose_count, S.level as level, S.rating as rating, S.crawled as crawled, UNIX_TIMESTAMP(C.created_at) as created_time, UNIX_TIMESTAMP(C.updated_at) \
	as updated_time, radians(S.jindu) as long_radians, radians(S.weidu) as lat_radians FROM shops S inner join comments C where C.commentable_type = 'Shop' \
	and C.commentable_id = S.id and C.id <= ( SELECT max_doc_id FROM sph_counter WHERE counter_id=2 );
    #sql_query                = SELECT id, group_id, UNIX_TIMESTAMP(date_added) AS date_added, title, content FROM documents
                                                              #sql_query第一列id需为整数
                                                              #title、content作为字符串/文本字段，被全文索引   
    sql_attr_uint            = shop_id
    sql_attr_uint            = likes_count
    sql_attr_uint            = comments_count
    sql_attr_uint            = dispose_count
    sql_attr_uint            = level
    sql_attr_uint            = rating 
    sql_attr_uint            = crawled
    sql_attr_timestamp        = created_time #从SQL读取到的值必须为整数，作为时间属性
    sql_attr_timestamp        = updated_time
 
    sql_query_info_pre      = SET NAMES utf8                                        #命令行查询时，设置正确的字符集
    #sql_query_info            = SELECT * FROM documents WHERE id=$id #命令行查询时，从数据库读取原始数据信息
    sql_query_info         = SELECT * FROM comments WHERE id=$id
}

source comment_delta : comment
{
    sql_query_pre = SET NAMES utf8
    sql_query     =  SELECT C.id as id, S.id as shop_id,  C.title as title, C.comment as comment, S.likes_count as likes_count, S.comments_count as comments_count, \
	S.dispose_count, S.level as level, S.rating as rating, S.crawled as crawled, UNIX_TIMESTAMP(C.created_at) as created_time, UNIX_TIMESTAMP(C.updated_at) \
	as updated_time, radians(S.jindu) as long_radians, radians(S.weidu) as lat_radians FROM shops S inner join comments C where C.commentable_type = 'Shop' \
	and C.commentable_id = S.id and C.id > ( SELECT max_doc_id FROM sph_counter WHERE counter_id=2 );
}
#index定义
index comment
{
    source            = comment             #对应的source名称
    path            = /usr/local/coreseek/var/data/sjb_comment #请修改为实际使用的绝对路径，例如：/usr/local/coreseek/var/...
    docinfo            = extern
    mlock            = 0
    morphology        = none
    min_word_len        = 1
    html_strip                = 0

    #中文分词配置，详情请查看：http://www.coreseek.cn/products-install/coreseek_mmseg/
    charset_dictpath = /usr/local/mmseg3/etc/ #BSD、Linux环境下设置，/符号结尾
    #charset_dictpath = etc/                             #Windows环境下设置，/符号结尾，最好给出绝对路径，例如：C:/usr/local/coreseek/etc/...
    charset_type        = zh_cn.utf-8
}

index comment_delta : comment
{
    source = comment_delta
    path = /usr/local/coreseek/var/data/sjb_comment_delta
}

#============================================================

source brand
{
    type                    = mysql
    sql_host                = localhost
    sql_user                = root
    sql_pass                = roor123 
    sql_db                  = sjb_production
    sql_port                = 3306
    sql_query_pre           = SET NAMES utf8
    sql_query_pre           = REPLACE INTO sph_timer_counter SELECT 9, MAX(id), MAX(updated_at) FROM brands;
	
    sql_query              = SELECT B.id as id, B.name as name, B.display_name as display_name, B.domain as domain, B.likes_count as likes_count, B.comments_count as comments_count, B.dispose_count, B.level as level, B.priority as priority, UNIX_TIMESTAMP(B.created_at) as created_time, UNIX_TIMESTAMP(B.updated_at) as updated_time from brands B where B.updated_at <=( SELECT current FROM sph_timer_counter WHERE counter_id=9 )
    #sql_query                = SELECT id, group_id, UNIX_TIMESTAMP(date_added) AS date_added, title, content FROM documents
                                                              #sql_query第一列id需为整数
                                                              #title、content作为字符串/文本字段，被全文索引   
    sql_attr_uint            = likes_count
    sql_attr_uint            = comments_count
    sql_attr_uint            = dispose_count
    sql_attr_uint            = level
    sql_attr_uint            = priority 
    sql_attr_timestamp       = created_time #从SQL读取到的值必须为整数，作为时间属性
    sql_attr_timestamp       = updated_time
 
    sql_query_info_pre      = SET NAMES utf8                                        #命令行查询时，设置正确的字符集
    sql_query_info          = SELECT * FROM brands WHERE id=$id
}

source brand_delta : brand
{
    sql_query_pre = SET NAMES utf8
    sql_query     =  SELECT B.id as id, B.name as name, B.display_name as display_name, B.domain as domain, B.likes_count as likes_count, B.comments_count as comments_count, B.dispose_count, B.level as level, B.priority as priority, UNIX_TIMESTAMP(B.created_at) as created_time, UNIX_TIMESTAMP(B.updated_at) as updated_time from brands B where B.updated_at >( SELECT current FROM sph_timer_counter WHERE counter_id=9 )
}

#index定义
index brand
{
    source            = brand             #对应的source名称
    path            = /usr/local/coreseek/var/data/sjb_brand #请修改为实际使用的绝对路径，例如：/usr/local/coreseek/var/...
    docinfo            = extern
    mlock            = 0
    morphology        = none
    min_word_len        = 1
    html_strip                = 0

    #中文分词配置，详情请查看：http://www.coreseek.cn/products-install/coreseek_mmseg/
    charset_dictpath = /usr/local/mmseg3/etc/ #BSD、Linux环境下设置，/符号结尾
    #charset_dictpath = etc/                             #Windows环境下设置，/符号结尾，最好给出绝对路径，例如：C:/usr/local/coreseek/etc/...
    charset_type        = zh_cn.utf-8
}

index brand_delta : brand
{
    source = brand_delta
    path = /usr/local/coreseek/var/data/sjb_brand_delta
}

#============================================================


#源定义
source user
{
    type                    = mysql

    sql_host                = localhost
    sql_user                = root
    sql_pass                = roor123 
    sql_db                  = sjb_production
    sql_port                = 3306
    sql_query_pre           = SET NAMES utf8
    #sql_query_pre           = CREATE TABLE sph_counter(counter_id INTEGER PRIMARY KEY NOT NULL, max_doc_id INTEGER NOT NULL);
    sql_query_pre           = REPLACE INTO sph_counter SELECT 3, MAX(id) FROM users;

    sql_query              = SELECT U.id as id, U.url as url, UNIX_TIMESTAMP(U.created_at) as created_time, UNIX_TIMESTAMP(U.updated_at) as updated_time, U.name as name, U.nickname as nickname, U.city as city, U.district as district, U.sign_in_count as sign_in_count, U.likes_count as likes_count, U.comments_count as comments_count, UNIX_TIMESTAMP(U.current_sign_in_at) as current_sign_in_at, U.posts_count as posts_count, U.is_girl as is_girl FROM users U where U.id <= ( SELECT max_doc_id FROM sph_counter WHERE counter_id=3 ); 
    #sql_query                = SELECT id, group_id, UNIX_TIMESTAMP(date_added) AS date_added, title, content FROM documents
                                                              #sql_query第一列id需为整数
                                                              #title、content作为字符串/文本字段，被全文索引   
    sql_attr_uint            = likes_count
    sql_attr_uint            = comments_count 
    sql_attr_uint            = sign_in_count
    sql_attr_uint            = posts_count
    sql_attr_string          = url   
 
    sql_attr_timestamp        = created_time #从SQL读取到的值必须为整数，作为时间属性
    sql_attr_timestamp        = updated_time
    sql_attr_timestamp        = current_sign_in_at
    sql_attr_float = long_radians
    sql_attr_float = lat_radians

    sql_query_info_pre      = SET NAMES utf8                                        #命令行查询时，设置正确的字符集
    #sql_query_info            = SELECT * FROM documents WHERE id=$id #命令行查询时，从数据库读取原始数据信息
    sql_query_info         = SELECT * FROM users WHERE id=$id
}

source user_delta : user
{
    sql_query_pre = SET NAMES utf8
    sql_query    = SELECT U.id as id, U.url as url, UNIX_TIMESTAMP(U.created_at) as created_time, UNIX_TIMESTAMP(U.updated_at) as updated_time, U.name as name, U.nickname as nickname, U.city as city, U.district as district, U.sign_in_count as sign_in_count, U.likes_count as likes_count, U.comments_count as comments_count, UNIX_TIMESTAMP(U.current_sign_in_at) as current_sign_in_at, U.posts_count as posts_count, U.is_girl as is_girl FROM users U where U.id > ( SELECT max_doc_id FROM sph_counter WHERE counter_id=3 );
}
#index定义
index user
{
    source            = user             #对应的source名称
    path            = /usr/local/coreseek/var/data/sjb_user #请修改为实际使用的绝对路径，例如：/usr/local/coreseek/var/...
    docinfo            = extern
    mlock            = 0
    morphology        = none
    min_word_len        = 1
    html_strip                = 0

    #中文分词配置，详情请查看：http://www.coreseek.cn/products-install/coreseek_mmseg/
    charset_dictpath = /usr/local/mmseg3/etc/ #BSD、Linux环境下设置，/符号结尾
    #charset_dictpath = etc/                             #Windows环境下设置，/符号结尾，最好给出绝对路径，例如：C:/usr/local/coreseek/etc/...
    charset_type        = zh_cn.utf-8
}

index user_delta : user
{
    source = user_delta
    path = /usr/local/coreseek/var/data/sjb_user_delta
}


#============================================================


#源定义
source area
{
    type                    = mysql

    sql_host                = localhost
    sql_user                = root
    sql_pass                = roor123 
    sql_db                  = sjb_production
    sql_port                = 3306
    sql_query_pre           = SET NAMES utf8   
    sql_query               = SELECT id, name, city, radians(jindu) as long_radians, radians(weidu) as lat_radians FROM areas where t='city';
    sql_attr_string         = t 

    sql_attr_float = long_radians
    sql_attr_float = lat_radians

    sql_query_info_pre      = SET NAMES utf8                                        #命令行查询时，设置正确的字符集
    sql_query_info         = SELECT * FROM areas WHERE id=$id
}

#index定义
index area
{
    source            = area             #对应的source名称
    path            = /usr/local/coreseek/var/data/sjb_area #请修改为实际使用的绝对路径，例如：/usr/local/coreseek/var/...
    docinfo            = extern
    mlock            = 0
    morphology        = none
    min_word_len        = 1
    html_strip                = 0

    #中文分词配置，详情请查看：http://www.coreseek.cn/products-install/coreseek_mmseg/
    charset_dictpath = /usr/local/mmseg3/etc/ #BSD、Linux环境下设置，/符号结尾
    #charset_dictpath = etc/                             #Windows环境下设置，/符号结尾，最好给出绝对路径，例如：C:/usr/local/coreseek/etc/...
    charset_type        = zh_cn.utf-8
}


#=======================================================

#源定义
source matter
{
    type                    = mysql
    sql_host                = localhost
    sql_user                = root
    sql_pass                = roor123 
    sql_db                  = sjb_production
    sql_port                = 3306
    sql_query_pre           = SET NAMES utf8   
    sql_query_pre           = REPLACE INTO sph_timer_counter SELECT 6, MAX(id), MAX(updated_at) FROM matters;

    sql_query               = SELECT M.id as id, M.image_name, M.level as level, M.tags as tags, S.likes_count as likes_count, S.comments_count as comments_count, S.dispose_count as dispose_count, B.level as blevel, C.color_r as r1, C.color_g as g1, C.color_b as b1,  C1.color_r as r2, C1.color_g as g2, C1.color_b as b2, M.is_cut as cut, I.title as mtitle, I.seo_title, S.title as title, CAST(S.price AS unsigned) as price, S.off_percent as off_percent, S.priority as priority, S.brand_id as brand_id, B.name as brand_name, M.user_id as user_id, M.rule_category_id as matter_category_id, S.category_id as category_id, UNIX_TIMESTAMP(S.created_at) as sku_created_time, UNIX_TIMESTAMP(M.created_at) as created_time, UNIX_TIMESTAMP(M.updated_at) as updated_time FROM ( ( ((matters M left join matter_infos I on M.id = I.matter_id ) left join colors C on M.color_one_id = C.id ) left join colors C1 on M.color_two_id = C1.id  ) left join skus S on M.sku_id = S.id ) left join brands B on S.brand_id = B.id where S.deleted is NULL and M.updated_at <= ( SELECT current FROM sph_timer_counter WHERE counter_id=6 );
    
    sql_attr_uint            = user_id           #从SQL读取到的值必须为整数
    sql_attr_uint            = price
    sql_attr_uint            = priority
    sql_attr_uint            = level  
    sql_attr_uint            = blevel
    sql_attr_uint            = brand_id
    sql_attr_uint            = category_id
    sql_attr_uint            = matter_category_id
    sql_attr_uint            = cut

    sql_attr_uint            = r1
    sql_attr_uint            = g1
    sql_attr_uint            = b1 
	
    sql_attr_uint            = r2
    sql_attr_uint            = g2
    sql_attr_uint            = b2 

    sql_attr_uint            = likes_count
    sql_attr_uint            = comments_count
    sql_attr_uint            = dispose_count
    sql_attr_uint            = off_percent

    sql_attr_timestamp        = sku_created_time
    sql_attr_timestamp        = created_time #从SQL读取到的值必须为整数，作为时间属性
    sql_attr_timestamp        = updated_time

    sql_query_info_pre      = SET NAMES utf8                                        #命令行查询时，设置正确的字符集
    sql_query_info         = SELECT * FROM matters WHERE id=$id
}

source matter_delta : matter
{
    sql_query_pre = SET NAMES utf8
     sql_query               = SELECT M.id as id, image_name, M.level as level, M.tags as tags, S.likes_count as likes_count, S.comments_count as comments_count, S.dispose_count as dispose_count, B.level as blevel, C.color_r as r1, C.color_g as g1, C.color_b as b1,  C1.color_r as r2, C1.color_g as g2, C1.color_b as b2, M.is_cut as cut, I.title as mtitle, I.seo_title, S.title as title, CAST(S.price AS unsigned) as price, S.off_percent as off_percent, S.priority as priority, S.brand_id as brand_id, B.name as brand_name, M.user_id as user_id, M.rule_category_id as matter_category_id, S.category_id as category_id, UNIX_TIMESTAMP(S.created_at) as sku_created_time, UNIX_TIMESTAMP(M.created_at) as created_time, UNIX_TIMESTAMP(M.updated_at) as updated_time FROM ( ( ((matters M left join matter_infos I on M.id = I.matter_id ) left join colors C on M.color_one_id = C.id ) left join colors C1 on M.color_two_id = C1.id  ) left join skus S on M.sku_id = S.id ) left join brands B on S.brand_id = B.id where S.deleted is NULL and M.updated_at > ( SELECT current FROM sph_timer_counter WHERE counter_id=6 );    
}

#index定义
index matter
{
    source            = matter             #对应的source名称
    path            = /usr/local/coreseek/var/data/sjb_matter #请修改为实际使用的绝对路径，例如：/usr/local/coreseek/var/...
    docinfo            = extern
    mlock            = 0
    morphology        = none
    min_word_len        = 1
    html_strip                = 0

    #中文分词配置，详情请查看：http://www.coreseek.cn/products-install/coreseek_mmseg/
    charset_dictpath = /usr/local/mmseg3/etc/ #BSD、Linux环境下设置，/符号结尾
    #charset_dictpath = etc/                             #Windows环境下设置，/符号结尾，最好给出绝对路径，例如：C:/usr/local/coreseek/etc/...
    charset_type        = zh_cn.utf-8
}

index matter_delta : matter
{
    source = matter_delta
    path = /usr/local/coreseek/var/data/sjb_matter_delta
}

#============================================================

#源定义
source address
{
    type                    = xmlpipe2
    xmlpipe_command        = cat /var/www/shangjieba/db/address.xml

}

#index定义
index address
{
    source            = address             #对应的source名称
    path            = /usr/local/coreseek/var/data/sjb_address #请修改为实际使用的绝对路径，例如：/usr/local/coreseek/var/...
    docinfo            = extern
    mlock            = 0
    morphology        = none
    min_word_len        = 1
    html_strip                = 0
    enable_star           = 1
    #min_prefix_len        = 2 
    min_infix_len     =  2   
 
    #中文分词配置，详情请查看：http://www.coreseek.cn/products-install/coreseek_mmseg/
    charset_dictpath = /usr/local/mmseg3/etc/ #BSD、Linux环境下设置，/符号结尾
    #charset_dictpath = etc/                             #Windows环境下设置，/符号结尾，最好给出绝对路径，例如：C:/usr/local/coreseek/etc/...
    charset_type        = zh_cn.utf-8
}


source query
{
    type                    = xmlpipe2
    xmlpipe_command        = cat /var/www/shangjieba/db/query.xml

}
#index定义
index query
{
    source            = query             #对应的source名称
    path            = /usr/local/coreseek/var/data/sjb_query #请修改为实际使用的绝对路径，例如：/usr/local/coreseek/var/...
    docinfo            = extern
    mlock            = 0
    morphology        = none
    min_word_len        = 1
    html_strip                = 0
    enable_star           = 1
    #min_prefix_len        = 2 
    min_infix_len     =  2

    #中文分词配置，详情请查看：http://www.coreseek.cn/products-install/coreseek_mmseg/
    charset_dictpath = /usr/local/mmseg3/etc/ #BSD、Linux环境下设置，/符号结尾
    #charset_dictpath = etc/                             #Windows环境下设置，/符号结尾，最好给出绝对路径，例如：C:/usr/local/coreseek/etc/...
    charset_type        = zh_cn.utf-8
}

#=======================================================

#全局index定义
indexer
{
    mem_limit            = 128M
}

#searchd服务定义
searchd
{
    listen                  =   9314
    read_timeout        = 20
    max_children        = 300
    max_matches            = 20000
    seamless_rotate        = 0
    preopen_indexes        = 0
    unlink_old            = 1
    pid_file = /usr/local/coreseek/var/log/searchd_sjb.pid  #请修改为实际使用的绝对路径，例如：/usr/local/coreseek/var/...
    log = /usr/local/coreseek/var/log/searchd_sjb.log        #请修改为实际使用的绝对路径，例如：/usr/local/coreseek/var/...
    query_log = /usr/local/coreseek/var/log/query_sjb.log #请修改为实际使用的绝对路径，例如：/usr/local/coreseek/var/...
    binlog_path =                                #关闭binlog日志
}
